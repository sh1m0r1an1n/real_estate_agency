# Generated by Django 5.1.7 on 2025-03-16 15:03

from django.db import migrations, transaction
from phonenumber_field.phonenumber import PhoneNumber
from phonenumbers import NumberParseException


def normalize_phones(apps, schema_editor):
    Flat = apps.get_model('property', 'Flat')
    flats = Flat.objects.all().only('owners_phonenumber', 'owner_pure_phone')

    updates = []
    for flat in flats.iterator():
        raw_phone = flat.owners_phonenumber
        if not raw_phone:
            continue
        try:
            parsed_phone = PhoneNumber.from_string(raw_phone, region='RU')
            if parsed_phone.is_valid():
                flat.owner_pure_phone = parsed_phone
            else:
                flat.owner_pure_phone = None
            updates.append(flat)
        except NumberParseException:
            flat.owner_pure_phone = None
            updates.append(flat)
    if updates:
        with transaction.atomic():
            Flat.objects.bulk_update(updates, ['owner_pure_phone'])

class Migration(migrations.Migration):

    dependencies = [
        ("property", "0008_alter_flat_owner_pure_phone"),
    ]

    operations = [
        migrations.RunPython(normalize_phones),
    ]
